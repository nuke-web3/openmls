use openmls::{
    prelude::{MlsMessageIn, RatchetTreeIn, Welcome},
    treesync::RatchetTree,
};
use tls_codec::{Deserialize, DeserializeBytes};

fn main() {
    let s = "0001000300014076208e1faada70f08b91ef7f7f79ed1da917d9ce3cea5e5ce22e4a8b10f4311559dd20a87de170e9dc54bd4a8a48f38cd5c949f0cc82fce8ea72232417975ec6bad95033f6701d639694cbb51a4b2d0191f432add5267eea7b33f3c0c7edc65a28650adb0008f08b84a420bf1070516cb079a8e5c4159a40e80bee12b78b86d125155b035f52e8a131469cf1b9645d70e270d3aa21c04945fa80b7fea30ccfceb436e4df23558cdc1a6cd435db3199314795b7c488b4bf0855cb589ad9c7eb43ea8bc9edef6b85ad1c97451b706e5de27aabe664dca132a288b3fc091b9100e470fb506833aaa4ab279a44c92c21e34dd295b6e49978d8c93cf20537bebc1a467177500d7fe6b127d5b3d13bf038cd2e8ec00937db6fd4996b2f2e416b810d0822b77bd71b59bf1e486c1ad74da0de9872f839b63928a03ae11e4dfacb7cf27ea2c35ae233d9c63fe901ddd4e7be7e643912bb39ad8a728792753bc8314317388e";
    let s = hex::decode(s).unwrap();
    let welcome = MlsMessageIn::tls_deserialize_exact(&s).unwrap();
    eprintln!("{welcome:#?}");
    eprintln!("{:#?}", welcome.into_welcome().unwrap());

    let t = "4a5301012085197b9ea343524f754dc668824184295b6d918b77b025cc491f92e982f79068202311e895c0ba2fc8706691f28808f23ecec88348605506aa0654e94365574d7a000120780fe5828d4161e1f2349a886b1a65429047c1c2adc9f8f757ad323ab9f8340002000110dada00010002000300041a1a00050006042a2a1a1a023a3a06000100020a0a0320c2b83383ba0da6216cdc2da0ae2491d729ff4809624eb59752d697f08329927a091a1a06836d3c07c4eb4040cfb18b65de7bcab7a3171fad239479ad37567ab729ce1d37262dac8a71f5d6b06e276a100878e1c4cbde51114b2b69da66ef7860b940403e1c8d8a0cb9033e0f0102209772cc1afaadd8ff99c5672fcfd7d0024c035f3ac353fa20d8d53f68362e801320b9193e2cd747f422787a758fe5637886798c6a138162a3a6c4824d1d3e20012b000101206ccbf1b01d0a78060b7da0083c585ca4e1d0702c9e16b40b66437f498d7283602093590fb48b55585ed73ae57e09101a8bb18c7e03d138732e5a9a1414b4c3c1c50001204e45da376c1a158af47621831871e7f379808c4def8b47fece1f2831727180bf020001106a6a00010002caca0003000400050006047a7a6a6a026a6a06000100029a9a0320df19c8262bd3dd5a2721494e8e67af63026ea92c0067ed6f8dbb8d6a704579760b6a6a088834a98e43c5d12640403378b9aa589426a6e5e6045150307fd8b7d72fcb64202c114f3013bec247e4fb2ee7402fcdb9b4fb14efa31a39916c28291296b049d30a0cd358a1693cdd91070102201ec571040b25c76b6ddbceb794937f075add861ecc808de40c6fd38264112f192024d4099ace2e6f0c7bdf0a8e0ca6501a885d707bc4f7c84beb8945437503241c00010120768c94746f0ef5dd75fbe8b947dc61845fb22d87cf21cd90b806c8641d910d2c204864ab8d3a225b3ea36c43e00485f8a9fbf351d35e51dd8884e61de82e4f5440000120075bc7dae0b65da93ec1cbcffa29f9b9c3bb61713ea4584eb0cdf77e2008406c0200010e000100020003000400050006caca047a7a5a5a02caca06000100025a5a0320747f788d2b133f65993e8ad959e3c331885c9d063d892552c69be9f030c1f782125a5a0f601ae01242bd00f0cfb0e81ac56d2d4040b28ff7be2f05d60c75cbf36702a0b4fdc9208e9aa97e7665874f3cbebd243b12c7fa507f17eb50e2f56357892f23fe4c290d74a50a75ca57e3c9294610c19e08010220799e8cd5133dcf913d1d53bc64f64e30c64294b706ff569a964dadc19b08470e20f698cc6f93a503e12283170fec181bc29011e19d7c8433f6303e3f4154a325c700010120709f9772177598b7e8b9dd8b88b3b4aacc70eca97275ce033bf9110522667e3320dec5f81d751582e168613451936878ea50b3ef6b9a3a7db6adbb2a0b9927065f0001208b54f00f020d9ac4309e22898c70fcff6c484ee42f5442c80159ba7ac753b10e02000110000100029a9a0003aaaa000400050006042a2a9a9a024a4a068a8a00010002032022979d017063b0199f461d64bf24baf4525a232098c101f46acb95147883e500049a9a014f40404eceb2b13c82897a0f46d883255f00ee7965f34054e5c337f0ae30d62ce57e0f4c0460c5a1f4dc9b2a72460a2e196c047d19e5039028aa74841ad2502e699a0b01022087d51d50760e8dbdd369fe80ff9e1066ec7bda1c10abe0cd94986c444d50b34700000101203ecd65878e3c421e23d1aff3972060aa0caf72c8da321c49d0e3e32e4771565c20b987fd77c3322b9b92ba1e6c645dbed8a28a333e25fbe78599a50eaee00caf2c00012094b5eb2be2aa0dccf65e67488dee8701c68cf4aa5fe35de03caab600c6c055ca020001120001aaaa00020a0a4a4a0003000400050006045a5a6a6a023a3a069a9a000100020320448a4e2ff9cdcca91eb36fb387a9775b4cc2b811e2f2bacf5de42c5240d7bc66046a6a01694040a07544f53fd7dcae0728c27b64fd9e1ecd1c4da0ee4519f70cbfaed36dc352c7c1b277d0f31165a65283db211fb1fc6def75b100baca380ba533138a6c4903060102209c72c8df4f0e3284017f589bcb978b38167af99aa1ff6eb4b148e90bfdbe042a20826a372dcf3307aff3c9db57a5678d3850cfdde25f548e00247fe003b6edaf8a00010120d039ae0b7b4a4a71a4c116e17d8adbcb48d0c22daa45a16b5b053f2ad1ac301320d127da04946167c4d36157b8accaebda122dbb4ca558af10227dc7b84c211403000120b89e539dca24e0f3f3a795afc6cace589ba17eaf0fb44c984384597f0e1740c9020001100001000200034a4a0004dada0005000604eaea9a9a021a1a068a8a000100020320c4240c1003d152be08a5fbcffc6d4a93c5922adb2c5a8bd0d195ac558eee9fa303eaea004040abf1f13b4bab1ba999cec337119586ba5ce9962083ea8459a6e36088f25a3ae9c67b2c74c4487fcd2c0b1266fd1b32e307c580474c7a4e33bb0831d64656490601022090cc51841275222982eacfa7175064aabbdf1e9fc0d3b8caa1254fb669cf045f205b498efee622ede79a9f8d98e04faaf1a748e87bde4a50305d6c72fa69aad962000101209e45c0feba832b1f5b6de84a7040d45bf34d99b92a8ff249ee11e27a1444843c20a0cf9dee5d4d8f8ecfc0c4e2b979e82c728610269dfe960b65313b2a4cc995b30001207332124c694644e3557d80049271b4dcaa1d3db4559149988331db0577a67bef0200010e4a4a000100020003000400050006041a1aeaea02caca0600010002eaea032075c4a6212e7b382dbea04ea3ebcdb1b574d4504ef5088ad1fc4cac48044d50b1031a1a004040780fb6cc84b60872260c67fa4f13da154ebeda6e3d110db443fa120625077942f60cddfb1423e88eb961b05b89d3d6313ca4eda5ca5dd02d9b28f8305e9393090102205f01d87cddebe75fe62b81710864f03f5992041b705d53b6f4f950ed26a32752207819f0e3c65835dff2b408ae58ef1c3a2e8ca3916134ef1345b8badc0afcb41f00010120977557f1906a3457269c16a408c63fc02b2a8aba3deb6b27cb5a815dcf6cc52220eb1378788e51c9c26c8cf2824f48e0869451d6bfd32a93b10d622100c02a87cb000120f5e5d994042791b49ccea6989b38a81dbe225e45f40a797d77edf99296c4772d0200010e0001eaea0002000300040005000604dada5a5a02baba0600010002baba010000000000000000ffffffffffffffff135a5a10d80f9be639358e17feb4f3633f47107140402dd8873ac2d400e4372e7ff0763c55b1856074b2358fd4ed7143435b733d1e6112c92e201cd157946e39bee277d80921e38625eb4047b815f2fa749a5a26ba0c000101209be6295faf0814054cdef6a80c75a32ea834e634b41da42f5701a6d1f2f0e530205f002e8ef08a200f648ee70fb1c74c3d67b49affd5474607e228bf3e8d5de05e00012028fb5ae1c23e40d0ac1bc2af7239efb36d81265a3bf00ab1b345f010bfdcf0f70200010e000100023a3a000300040005000604eaea4a4a02eaea065a5a00010002010000000000000000ffffffffffffffff09eaea06fae05f00e9ac404064ac7afed038c6ee946e4f39e80edf8f2ff7d510f9dfd57ca123ba02f4ebbb36083edd0d6b2282ffc0d42f8341061e42e769842dc66f79d23ebf20730e43ba05";
    let t = hex::decode(t).unwrap();
    let tree = RatchetTreeIn::tls_deserialize_exact(&t).unwrap();
    eprintln!("{tree:#?}");
}
